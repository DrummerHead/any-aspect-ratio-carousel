(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.aarCarousel = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
"use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var _createClass=function(){function e(e,t){for(var i=0;i<t.length;i++){var r=t[i];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,i,r){return i&&e(t.prototype,i),r&&e(t,r),t}}(),AarCarousel=function(){function e(t){var i=arguments.length<=1||void 0===arguments[1]?{}:arguments[1],r=i.height,n=void 0===r?"90vh":r,a=i.slideTransitionDuration,s=void 0===a?576:a;_classCallCheck(this,e),this.elementReference=t,this.ol=this.elementReference.querySelector("ol"),this.chariots=this.ol.querySelectorAll("li"),this.length=this.chariots.length,this.chariotWidth=100/this.length,this.height=n,this.slideTransitionDuration=s,this.imageNumber=0,this.prevImageNumber=0,this.buildUI()}return _createClass(e,[{key:"safeImageNumber",value:function(e){return(e%this.length+this.length)%this.length}},{key:"nextImage",value:function(){this.goToImage(this.imageNumber+1)}},{key:"previousImage",value:function(){this.goToImage(this.imageNumber-1)}},{key:"goToImage",value:function(e){this.prevImageNumber=this.imageNumber,this.imageNumber=this.safeImageNumber(e),this.ol.style.transform="translateX(-"+this.chariotWidth*this.imageNumber+"%)"}},{key:"afterTransition",value:function(){this.chariots[this.prevImageNumber].querySelector("img").classList.remove("pan"),this.chariots[this.imageNumber].querySelector("img").classList.add("pan")}},{key:"attachControls",value:function(){var e=this;this.elementReference.insertAdjacentHTML("beforeend","\n      <div class='aar-carousel__controls'>\n        <div class='aar-carousel__prev'>\n          prev\n        </div>\n        <div class='aar-carousel__next'>\n          next\n        </div>\n      </div>\n    ");var t=this.elementReference.querySelector(".aar-carousel__prev"),i=this.elementReference.querySelector(".aar-carousel__next");t.addEventListener("click",function(){return e.previousImage()}),i.addEventListener("click",function(){return e.nextImage()})}},{key:"buildUI",value:function(){var e=this;this.elementReference.style.height=this.height,this.ol.style.width=100*this.length+"%",this.ol.style.transitionDuration=this.slideTransitionDuration+"ms",this.ol.addEventListener("transitionend",function(){return e.afterTransition()});var t=!0,i=!1,r=void 0;try{for(var n,a=this.chariots[Symbol.iterator]();!(t=(n=a.next()).done);t=!0){var s=n.value;s.style.width=this.chariotWidth+"%"}}catch(e){i=!0,r=e}finally{try{!t&&a.return&&a.return()}finally{if(i)throw r}}this.attachControls(),this.goToImage(0)}}]),e}(),initCarousels=function(e){var t=document.querySelectorAll(".aar-carousel"),i=!0,r=!1,n=void 0;try{for(var a,s=t[Symbol.iterator]();!(i=(a=s.next()).done);i=!0){var o=a.value;new AarCarousel(o,e)}}catch(e){r=!0,n=e}finally{try{!i&&s.return&&s.return()}finally{if(r)throw n}}};module.exports=initCarousels;

},{}]},{},[1])(1)
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
